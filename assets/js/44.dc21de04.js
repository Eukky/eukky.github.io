(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{368:function(s,e,n){"use strict";n.r(e);var a=n(14),t=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"ue5中的卡通渲染-自定义描边pass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ue5中的卡通渲染-自定义描边pass"}},[s._v("#")]),s._v(" UE5中的卡通渲染——自定义描边Pass")]),s._v(" "),e("p",[s._v("上一篇讲了自定义Shading Model来在UE的材质中添加自己的光照模型，这次我们来讲讲如何在UE5的渲染管线中添加一个自定义的DrawPass来绘制法线扩张描边。")]),s._v(" "),e("h2",{attrs:{id:"描边的绘制方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#描边的绘制方法"}},[s._v("#")]),s._v(" 描边的绘制方法")]),s._v(" "),e("p",[s._v("绘制描边的方法多种多样，但是常见的描边绘制主要有两种思路，其一就是法线外扩的方式来绘制描边，另一种则是通过在后处理中进行边缘识别来绘制描边。")]),s._v(" "),e("p",[s._v("简单讲讲两者的区别和优劣，影响顶点法线外扩描边效果的因素主要来源于顶点法线的扩张角度，而影响后处理描边效果的因素则比较多样，在RT中选择写入Detph还是选择写入自定义的Stencil Bit，都会对后期的边缘识别效果产生影响，同时，选择使用的边缘识别算子也会对最终的效果产生影响，在后处理描边的具体细化方案中，还需结合自身需求来选择一种最合适的方案进行绘制。")]),s._v(" "),e("p",[s._v("这篇文章的主要目的是通过实现法线外扩描边功能来讲解UE5中的Draw Pass相关的原理和流程，因此暂时不会涉及到后处理描边的讲解，关于后处理描边，也许后面有时间了，也会尝试着做一做吧。")]),s._v(" "),e("h2",{attrs:{id:"mesh-draw-pass的简单流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mesh-draw-pass的简单流程"}},[s._v("#")]),s._v(" Mesh Draw Pass的简单流程")]),s._v(" "),e("p",[s._v("添加一个Mesh Draw Pass主要需要实现三样东西")]),s._v(" "),e("ol",[e("li",[s._v("Mesh Draw Pass的Processor类")]),s._v(" "),e("li",[s._v("定义VS和PS的类，以及Shader的实现")]),s._v(" "),e("li",[s._v("调用RDG的Render函数")])]),s._v(" "),e("p",[s._v("通过实现上述三种类或函数，再完成一些其他零散的修改和实现，即可完成自定义Pass的创建了。下面就来讲讲具体如何进行开发吧。")]),s._v(" "),e("h2",{attrs:{id:"mesh-draw-pass的开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mesh-draw-pass的开发"}},[s._v("#")]),s._v(" Mesh Draw Pass的开发")]),s._v(" "),e("p",[s._v("首先还是一样，寻找定义Mesh Draw Pass的地方，在定义的枚举种添加我们自己的Pass名称")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//MeshPassProcessor.h\nnamespace EMeshPass\n{\n\tenum Type : uint8\n\t{\n\t\tDepthPass,\n\t\tBasePass,\n\t\tAnisotropyPass,\n\t\tSkyPass,\n\t\tSingleLayerWaterPass,\n\t\tSingleLayerWaterDepthPrepass,\n\t\tCSMShadowDepth,\n\t\tVSMShadowDepth,\n\t\tDistortion,\n\t\tVelocity,\n\t\tTranslucentVelocity,\n\t\tTranslucencyStandard,\n\t\tTranslucencyStandardModulate,\n\t\tTranslucencyAfterDOF,\n\t\tTranslucencyAfterDOFModulate,\n\t\tTranslucencyAfterMotionBlur,\n\t\tTranslucencyAll, /** Drawing all translucency, regardless of separate or standard.  Used when drawing translucency outside of the main renderer, eg FRendererModule::DrawTile. */\n\t\tLightmapDensity,\n\t\tDebugViewMode, /** Any of EDebugViewShaderMode */\n\t\tCustomDepth,\n\t\tMobileBasePassCSM,  /** Mobile base pass with CSM shading enabled */\n\t\tVirtualTexture,\n\t\tLumenCardCapture,\n\t\tLumenCardNanite,\n\t\tLumenTranslucencyRadianceCacheMark,\n\t\tLumenFrontLayerTranslucencyGBuffer,\n\t\tDitheredLODFadingOutMaskPass, /** A mini depth pass used to mark pixels with dithered LOD fading out. Currently only used by ray tracing shadows. */\n\t\tNaniteMeshPass,\n\t\tMeshDecal,\n\n#if WITH_EDITOR\n\t\tHitProxy,\n\t\tHitProxyOpaqueOnly,\n\t\tEditorLevelInstance,\n\t\tEditorSelection,\n#endif\n\t\tOutlinePass,\n\n\t\tNum,\n\t\tNumBits = 6,\n\t};\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[s._v("并修改静态检查中Pass的数量")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('inline const TCHAR* GetMeshPassName(EMeshPass::Type MeshPass)\n{\n\tswitch (MeshPass)\n\t{\n\tcase EMeshPass::DepthPass: return TEXT("DepthPass");\n\tcase EMeshPass::BasePass: return TEXT("BasePass");\n\tcase EMeshPass::AnisotropyPass: return TEXT("AnisotropyPass");\n\tcase EMeshPass::SkyPass: return TEXT("SkyPass");\n\tcase EMeshPass::SingleLayerWaterPass: return TEXT("SingleLayerWaterPass");\n\tcase EMeshPass::SingleLayerWaterDepthPrepass: return TEXT("SingleLayerWaterDepthPrepass");\n\tcase EMeshPass::CSMShadowDepth: return TEXT("CSMShadowDepth");\n\tcase EMeshPass::VSMShadowDepth: return TEXT("VSMShadowDepth");\n\tcase EMeshPass::Distortion: return TEXT("Distortion");\n\tcase EMeshPass::Velocity: return TEXT("Velocity");\n\tcase EMeshPass::TranslucentVelocity: return TEXT("TranslucentVelocity");\n\tcase EMeshPass::TranslucencyStandard: return TEXT("TranslucencyStandard");\n\tcase EMeshPass::TranslucencyStandardModulate: return TEXT("TranslucencyStandardModulate");\n\tcase EMeshPass::TranslucencyAfterDOF: return TEXT("TranslucencyAfterDOF");\n\tcase EMeshPass::TranslucencyAfterDOFModulate: return TEXT("TranslucencyAfterDOFModulate");\n\tcase EMeshPass::TranslucencyAfterMotionBlur: return TEXT("TranslucencyAfterMotionBlur");\n\tcase EMeshPass::TranslucencyAll: return TEXT("TranslucencyAll");\n\tcase EMeshPass::LightmapDensity: return TEXT("LightmapDensity");\n\tcase EMeshPass::DebugViewMode: return TEXT("DebugViewMode");\n\tcase EMeshPass::CustomDepth: return TEXT("CustomDepth");\n\tcase EMeshPass::MobileBasePassCSM: return TEXT("MobileBasePassCSM");\n\tcase EMeshPass::VirtualTexture: return TEXT("VirtualTexture");\n\tcase EMeshPass::LumenCardCapture: return TEXT("LumenCardCapture");\n\tcase EMeshPass::LumenCardNanite: return TEXT("LumenCardNanite");\n\tcase EMeshPass::LumenTranslucencyRadianceCacheMark: return TEXT("LumenTranslucencyRadianceCacheMark");\n\tcase EMeshPass::LumenFrontLayerTranslucencyGBuffer: return TEXT("LumenFrontLayerTranslucencyGBuffer");\n\tcase EMeshPass::DitheredLODFadingOutMaskPass: return TEXT("DitheredLODFadingOutMaskPass");\n\tcase EMeshPass::NaniteMeshPass: return TEXT("NaniteMeshPass");\n\tcase EMeshPass::MeshDecal: return TEXT("MeshDecal");\n#if WITH_EDITOR\n\tcase EMeshPass::HitProxy: return TEXT("HitProxy");\n\tcase EMeshPass::HitProxyOpaqueOnly: return TEXT("HitProxyOpaqueOnly");\n\tcase EMeshPass::EditorLevelInstance: return TEXT("EditorLevelInstance");\n\tcase EMeshPass::EditorSelection: return TEXT("EditorSelection");\n#endif\n\tcase EMeshPass::OutlinePass: return TEXT("OutlinePass");\n\t}\n\n#if WITH_EDITOR\n\tstatic_assert(EMeshPass::Num == 30 + 4, "Need to update switch(MeshPass) after changing EMeshPass");\n#else\n\tstatic_assert(EMeshPass::Num == 30, "Need to update switch(MeshPass) after changing EMeshPass");\n#endif\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[s._v("在新版本的开发分支中，增加了对于PSO数量的静态检查，因此需要在FPSOCollectorCreateManager中修改MaxPSOCollectorCount的值为目前的Pass数量")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//PSOPrecache.h\nclass ENGINE_API FPSOCollectorCreateManager\n{\npublic:\n\n\tconstexpr static uint32 MaxPSOCollectorCount = 34;\n\n\tstatic PSOCollectorCreateFunction GetCreateFunction(EShadingPath ShadingPath, uint32 Index)\n\t{\n\t\tcheck(Index < MaxPSOCollectorCount);\n\t\tuint32 ShadingPathIdx = (uint32)ShadingPath;\n\t\treturn JumpTable[ShadingPathIdx][Index];\n\t}\n\nprivate:\n\n\t// Have to used fixed size array instead of TArray because of order of initialization of static member variables\n\tstatic PSOCollectorCreateFunction JumpTable[(uint32)EShadingPath::Num][MaxPSOCollectorCount];\n\tfriend class FRegisterPSOCollectorCreateFunction;\n};\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("接着创建一个新的头文件和一个新的CPP文件，用来存放新的Processor类和Shader类的实现，这一步同样可以仿照UE本身的Pass的实现，在UE本身的Pass种，参照Custom Depth Pass是一个不错的选择，流程清晰，代码量少。")]),s._v(" "),e("p",[s._v("首先在头文件中实现Processor类的声明，在这个类中主要包含一个构造函数和两个成员函数")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//OutlinePassRendering.h\nclass FOutlinePassProcessor : public FMeshPassProcessor\n{\npublic:\n\tFOutlinePassProcessor(\n\t\tconst FScene* Scene,\n\t\tconst FSceneView* InViewIfDynamicMeshCommand,\n\t\tconst FMeshPassProcessorRenderState& InPassDrawRenderState,\n\t\tFMeshPassDrawListContext* InDrawListContext\n\t);\n\n\tvirtual void AddMeshBatch(\n\t\tconst FMeshBatch& RESTRICT MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tint32 StaticMeshId = -1\n\t) override final;\n\nprivate:\n\tbool Process(\n\t\tconst FMeshBatch& MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tint32 StaticMeshId,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tconst FMaterialRenderProxy& RESTRICT MaterialRenderProxy,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode\n\t);\n\t\n\tFMeshPassProcessorRenderState PassDrawRenderState;\n};\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[s._v("接着是VS和PS两个Shader类的实现，由于目前尚未实现材质中获取描边参数的接口，可以暂时把下面代码中获取参数的代码注释掉，转而传给Shader一个定值来测试功能是否能够正常使用")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//OutlinePassRendering.h\nclass FOutlineVS : public FMeshMaterialShader\n{\n\tDECLARE_SHADER_TYPE(FOutlineVS, MeshMaterial);\n\npublic:\n\tFOutlineVS() = default;\n\tFOutlineVS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)\n\t\t: FMeshMaterialShader(Initializer)\n\t{\n\t\tOutLineScale.Bind(Initializer.ParameterMap, TEXT("OutLineScale"));\n\t}\n\n\tstatic void ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)\n\t{}\n\n\tstatic bool ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)\n\t{\n\t\treturn IsFeatureLevelSupported(Parameters.Platform, ERHIFeatureLevel::SM5) &&\n\t\t\tParameters.MaterialParameters.bHasOutline && \n\t\t\t(Parameters.VertexFactoryType->GetFName() == FName(TEXT("FLocalVertexFactory")) || \n\t\t\t\tParameters.VertexFactoryType->GetFName() == FName(TEXT("TGPUSkinVertexFactoryDefault")));\n\t}\n\n\tvoid GetShaderBindings(\n\t\tconst FScene* Scene,\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst FMaterialRenderProxy& MaterialRenderProxy,\n\t\tconst FMaterial& Material,\n\t\tconst FMeshPassProcessorRenderState& DrawRenderState,\n\t\tconst FMeshMaterialShaderElementData& ShaderElementData,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings) const\n\t{\n\t\tFMeshMaterialShader::GetShaderBindings(Scene, FeatureLevel, PrimitiveSceneProxy, MaterialRenderProxy, Material, DrawRenderState, ShaderElementData, ShaderBindings);\n\n\t\t// const float OutlineScale = Material.GetOutlineScale();\n\t\tShaderBindings.Add(OutLineScale, 1.0);\n\t}\n\n\tLAYOUT_FIELD(FShaderParameter, OutLineScale);\n};\n\n\nclass FOutlinePS : public FMeshMaterialShader\n{\n\tDECLARE_SHADER_TYPE(FOutlinePS, MeshMaterial);\n\t\npublic:\n\n\tFOutlinePS() = default;\n\tFOutlinePS(const ShaderMetaType::CompiledShaderInitializerType& Initializer)\n\t\t: FMeshMaterialShader(Initializer)\n\t{\n\t\tOutLineColor.Bind(Initializer.ParameterMap, TEXT("OutLineColor"));\n\t}\n\n\tstatic void ModifyCompilationEnvironment(const FMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)\n\t{}\n\n\tstatic bool ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)\n\t{\n\t\treturn IsFeatureLevelSupported(Parameters.Platform, ERHIFeatureLevel::SM5) &&\n\t\t\tParameters.MaterialParameters.bHasOutline && \n\t\t\t(Parameters.VertexFactoryType->GetFName() == FName(TEXT("FLocalVertexFactory")) || \n\t\t\t\tParameters.VertexFactoryType->GetFName() == FName(TEXT("TGPUSkinVertexFactoryDefault")));\n\t}\n\t\n\tvoid GetShaderBindings(\n\t\tconst FScene* Scene,\n\t\tERHIFeatureLevel::Type FeatureLevel,\n\t\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\t\tconst FMaterialRenderProxy& MaterialRenderProxy,\n\t\tconst FMaterial& Material,\n\t\tconst FMeshPassProcessorRenderState& DrawRenderState,\n\t\tconst FMeshMaterialShaderElementData& ShaderElementData,\n\t\tFMeshDrawSingleShaderBindings& ShaderBindings) const\n\t{\n\t\tFMeshMaterialShader::GetShaderBindings(Scene, FeatureLevel, PrimitiveSceneProxy, MaterialRenderProxy, Material, DrawRenderState, ShaderElementData, ShaderBindings);\n\n\t\t// const FLinearColor OutlineColor = Material.GetOutlineColor();\n\t\tFVector3f Color(1.0, 0.0, 0.0);\n\n\t\tShaderBindings.Add(OutLineColor, Color);\n\t}\n\t\n\tLAYOUT_FIELD(FShaderParameter, OutLineColor);\n};\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br")])]),e("p",[s._v("整个Shader类的实现非常简单，主要可以分为以下几个部分")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("DECLARE_SHADER_TYPE")]),s._v("用于在UE中声明Shader的类型")]),s._v(" "),e("li",[e("code",[s._v("LAYOUT_FIELD")]),s._v("用于声明Shader中能够传入的Uniform参数")]),s._v(" "),e("li",[e("code",[s._v("ModifyCompilationEnvironment")]),s._v("用于在Shader中定义特定的宏")]),s._v(" "),e("li",[e("code",[s._v("GetShaderBindings")]),s._v("用于绑定已经声明的Uniform参数")])]),s._v(" "),e("p",[s._v("如此一来，Shader类这部分就基本算是完成了，但是也不要忘了在CPP文件中将对应的Shader文件绑定到这个Shader类上，这样在编译之后UE才能找到对应的Shader文件")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//OutlinePassRendering.cpp\nIMPLEMENT_MATERIAL_SHADER_TYPE(, FOutlineVS, TEXT("/Engine/Private/OutlinePassShader.usf"), TEXT("MainVS"), SF_Vertex);\nIMPLEMENT_MATERIAL_SHADER_TYPE(, FOutlinePS, TEXT("/Engine/Private/OutlinePassShader.usf"), TEXT("MainPS"), SF_Pixel);\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("同时，新建一个usf文件用来实现描边绘制的Shader")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//OutlinePassShader.usf\n#include "Common.ush"\n#include "/Engine/Generated/Material.ush"\n#include "/Engine/Generated/VertexFactory.ush"\n\nstruct FSimpleMeshPassVSToPS\n{\n\tFVertexFactoryInterpolantsVSToPS FactoryInterpolants;\n\tfloat4 Position : SV_POSITION;\n};\n\nfloat OutLineScale;\nfloat3 OutLineColor;\n\n#if VERTEXSHADER\nvoid MainVS(\n\tFVertexFactoryInput Input,\n\tout FSimpleMeshPassVSToPS Output)\n{\n\tResolvedView = ResolveView();\n\t\n\tFVertexFactoryIntermediates VFIntermediates = GetVertexFactoryIntermediates(Input);\n\t\n\tfloat4 WorldPos = VertexFactoryGetWorldPosition(Input, VFIntermediates);\n\tfloat3 WorldNormal = VertexFactoryGetWorldNormal(Input, VFIntermediates);\n\t\n\tfloat3x3 TangentToLocal = VertexFactoryGetTangentToLocal(Input, VFIntermediates);\n\n\tFMaterialVertexParameters VertexParameters = GetMaterialVertexParameters(Input, VFIntermediates, WorldPos.xyz, TangentToLocal);\n\tWorldPos.xyz += GetMaterialWorldPositionOffset(VertexParameters);\n\tWorldPos.xyz += WorldNormal * OutLineScale;\n    \n\tfloat4 RasterizedWorldPosition = VertexFactoryGetRasterizedWorldPosition(Input, VFIntermediates, WorldPos);\n\n\tOutput.FactoryInterpolants = VertexFactoryGetInterpolantsVSToPS(Input, VFIntermediates, VertexParameters);\n\tOutput.Position = mul(RasterizedWorldPosition, ResolvedView.TranslatedWorldToClip);\n\n\tfloat2 ExtentDir = normalize(mul(float4(WorldNormal, 1.0f), ResolvedView.TranslatedWorldToClip).xy);\n\tfloat Scale = clamp(0.0f, 0.5f, Output.Position.w * 1.0f * 0.1f);\n\tOutput.Position.xy += ExtentDir * Scale;\n}\n#endif // VERTEXSHADER\n\nvoid MainPS(\n\tFSimpleMeshPassVSToPS Input,\n\tout float4 OutColor : SV_Target0)\n{\n\tOutColor = float4(OutLineColor, 1.0);\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br")])]),e("p",[s._v("接下来则是对Processor中三个函数的实现，同样，下面的实现也注释掉了目前还没有在Material中完成的接口部分")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//OutlinePassRendering.cpp\nFOutlinePassProcessor::FOutlinePassProcessor(\n\tconst FScene* Scene,\n\tconst FSceneView* InViewIfDynamicMeshCommand,\n\tconst FMeshPassProcessorRenderState& InPassDrawRenderState,\n\tFMeshPassDrawListContext* InDrawListContext)\n:FMeshPassProcessor(Scene, Scene->GetFeatureLevel(), InViewIfDynamicMeshCommand, InDrawListContext),\nPassDrawRenderState(InPassDrawRenderState)\n{\n\t// PassDrawRenderState.SetViewUniformBuffer(Scene->UniformBuffers.ViewUniform);\n\tif (PassDrawRenderState.GetDepthStencilState() == nullptr)\n\t{\n\t\tPassDrawRenderState.SetDepthStencilState(TStaticDepthStencilState<false, CF_NotEqual>().GetRHI());\n\t}\n\tif (PassDrawRenderState.GetBlendState() == nullptr)\n\t{\n\t\tPassDrawRenderState.SetBlendState(TStaticBlendState<>().GetRHI());\n\t}\n}\n\nvoid FOutlinePassProcessor::AddMeshBatch(\n\tconst FMeshBatch& MeshBatch,\n\tuint64 BatchElementMask,\n\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\tint32 StaticMeshId)\n{\n\tconst FMaterialRenderProxy* MaterialRenderProxy = MeshBatch.MaterialRenderProxy;\n\tconst FMaterialRenderProxy* FallBackMaterialRenderProxyPtr = nullptr;\n\tconst FMaterial* Material = MaterialRenderProxy->GetMaterialNoFallback(FeatureLevel);\n\t\n\t// only set in Material will draw outline\n\tif (Material != nullptr && Material->GetRenderingThreadShaderMap() /*&& Material->HasOutline()*/)\n\t{\n\t\t// Determine the mesh\'s material and blend mode.\n\t\tconst EBlendMode BlendMode = Material->GetBlendMode();\n\n\t\tbool bResult = true;\n\t\tif (BlendMode == BLEND_Opaque)\n\t\t{\n\t\t\tProcess(\n\t\t\t\tMeshBatch,\n\t\t\t\tBatchElementMask,\n\t\t\t\tStaticMeshId,\n\t\t\t\tPrimitiveSceneProxy,\n\t\t\t\t*MaterialRenderProxy,\n\t\t\t\t*Material,\n\t\t\t\tFM_Solid,\n\t\t\t\tCM_CCW);\n\t\t}\n\t}\n}\n\nbool FOutlinePassProcessor::Process(\n\tconst FMeshBatch& MeshBatch,\n\tuint64 BatchElementMask,\n\tint32 StaticMeshId,\n\tconst FPrimitiveSceneProxy* PrimitiveSceneProxy,\n\tconst FMaterialRenderProxy& MaterialRenderProxy,\n\tconst FMaterial& RESTRICT MaterialResource,\n\tERasterizerFillMode MeshFillMode,\n\tERasterizerCullMode MeshCullMode)\n{\n\tconst FVertexFactory* VertexFactory = MeshBatch.VertexFactory;\n\n\tTMeshProcessorShaders<FOutlineVS, FOutlinePS> OutlineShaders;\n\t\n\t{\n\t\tFMaterialShaderTypes ShaderTypes;\n\t\tShaderTypes.AddShaderType<FOutlineVS>();\n\t\tShaderTypes.AddShaderType<FOutlinePS>();\n\t\n\t\tconst FVertexFactoryType* VertexFactoryType = VertexFactory->GetType();\n\t\n\t\tFMaterialShaders Shaders;\n\t\tif (!MaterialResource.TryGetShaders(ShaderTypes, VertexFactoryType, Shaders))\n\t\t{\n\t\t\tUE_LOG(LogShaders, Warning, TEXT("Shader Not Found!"));\n\t\t\treturn false;\n\t\t}\n\t\n\t\tShaders.TryGetVertexShader(OutlineShaders.VertexShader);\n\t\tShaders.TryGetPixelShader(OutlineShaders.PixelShader);\n\t}\n\n\t\n\tFMeshMaterialShaderElementData ShaderElementData;\n\tShaderElementData.InitializeMeshMaterialData(ViewIfDynamicMeshCommand, PrimitiveSceneProxy, MeshBatch, StaticMeshId, false);\n\n\tconst FMeshDrawCommandSortKey SortKey = CalculateMeshStaticSortKey(OutlineShaders.VertexShader, OutlineShaders.PixelShader);\n\n\tPassDrawRenderState.SetDepthStencilState(\n\tTStaticDepthStencilState<\n\ttrue, CF_GreaterEqual,// Enable DepthTest, It reverse about OpenGL(which is less)\n\tfalse, CF_Never, SO_Keep, SO_Keep, SO_Keep,\n\tfalse, CF_Never, SO_Keep, SO_Keep, SO_Keep,// enable stencil test when cull back\n\t0x00,// disable stencil read\n\t0x00>// disable stencil write\n\t::GetRHI());\n\tPassDrawRenderState.SetStencilRef(0);\n\t\n\tBuildMeshDrawCommands(\n\t\tMeshBatch,\n\t\tBatchElementMask,\n\t\tPrimitiveSceneProxy,\n\t\tMaterialRenderProxy,\n\t\tMaterialResource,\n\t\tPassDrawRenderState,\n\t\tOutlineShaders,\n\t\tMeshFillMode,\n\t\tMeshCullMode,\n\t\tSortKey,\n\t\tEMeshPassFeatures::Default,\n\t\tShaderElementData\n\t);\n\t\n\treturn true;\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br")])]),e("p",[s._v("这段代码看似复杂，实在主要完成了以下几个部分的功能")]),s._v(" "),e("ul",[e("li",[s._v("构造函数中主要完成对渲染状态的重置和清零")]),s._v(" "),e("li",[s._v("在"),e("code",[s._v("AddMeshBatch")]),s._v("中，则主要用来收集需要在该Pass中进行绘制的Mesh，同时调用"),e("code",[s._v("Process")]),s._v("函数，实现主要的功能")]),s._v(" "),e("li",[s._v("在"),e("code",[s._v("Process")]),s._v("中，主要完成了以下几件事情，获取Shader，设置渲染状态，以及调用"),e("code",[s._v("BuildMeshDrawCommands")]),s._v("构建渲染指令，而这些渲染指令则是最终我们在RDG中去执行的渲染指令")])]),s._v(" "),e("p",[s._v("UE对图形渲染的实现做了很多封装，同时又因为其自身管线的复杂程度，导致其自身的工程实现非常重，但是从另一方面来看，在实现了上述的Processor之后，渲染所需要的准备就基本上算是完成了，你会发现在实现的过程中并没有接触到图形API相关的概念，而是把注意力集中到了对Mesh的处理以及对渲染状态的处理上，所以UE的这套管线封装，在我看来有利有弊，也算是一把双刃剑吧。")]),s._v(" "),e("p",[s._v("但是仅仅是这样子还远远不能让这个Pass跑起来，我们还需要再添加一些另外的东西。")]),s._v(" "),e("p",[s._v("首先是这个Processor的注册")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//OutlinePassRendering.cpp\nvoid SetupOutlinePassState(FMeshPassProcessorRenderState& DrawRenderState)\n{\n\tDrawRenderState.SetDepthStencilState(TStaticDepthStencilState<true, CF_LessEqual>().GetRHI());\n}\n\nFMeshPassProcessor* CreateOutlinePassProcessor(const FScene* Scene, const FSceneView* InViewIfDynamicMeshCommand, FMeshPassDrawListContext* InDrawListContext)\n{\n\tFMeshPassProcessorRenderState OutlinePassState;\n\tSetupOutlinePassState(OutlinePassState);\n\treturn new FOutlinePassProcessor(Scene, InViewIfDynamicMeshCommand, OutlinePassState, InDrawListContext);\n}\n\nFRegisterPassProcessorCreateFunction RegisterOutlinePass(&CreateOutlinePassProcessor, EShadingPath::Deferred, EMeshPass::OutlinePass, EMeshPassFlags::CachedMeshCommands | EMeshPassFlags::MainView);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[s._v("在注册完成之后，UE会替我们去创建这个Processor，而不需要我们自己去构造这个Processor的实例对象了")]),s._v(" "),e("p",[s._v("接着，在DeferredShadingRenderer中声明Render函数")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//DeferredShadingRenderer.h\nvoid RenderPrePass(FRDGBuilder& GraphBuilder, FRDGTextureRef SceneDepthTexture, FInstanceCullingManager& InstanceCullingManager);\nvoid RenderPrePassHMD(FRDGBuilder& GraphBuilder, FRDGTextureRef SceneDepthTexture);\n\nvoid RenderOutlinePass(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures);\n\nvoid RenderFog(\n    FRDGBuilder& GraphBuilder,\n    const FMinimalSceneTextures& SceneTextures,\n    FRDGTextureRef LightShaftOcclusionTexture);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("将Render的函数依旧放入Processor的CPP文件中，由于需要在RDG中传入绘制所需要的View以及SceneTexture，在此处还需使用Shader宏来定义UniformBuffer，以便传入绘制所需要的参数")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('//OutlinePassRendering.cpp\nDECLARE_CYCLE_STAT(TEXT("OutlinePass"), STAT_CLP_OutlinePass, STATGROUP_ParallelCommandListMarkers);\n\nBEGIN_SHADER_PARAMETER_STRUCT(FOutlineMeshPassParameters, )\n\tSHADER_PARAMETER_STRUCT_REF(FViewUniformShaderParameters, View)\n\tSHADER_PARAMETER_STRUCT_INCLUDE(FInstanceCullingDrawParams, InstanceCullingDrawParams)\n\tRENDER_TARGET_BINDING_SLOTS()\nEND_SHADER_PARAMETER_STRUCT()\n\nFOutlineMeshPassParameters* GetOutlinePassParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View, FSceneTextures& SceneTextures)\n{\n\tFOutlineMeshPassParameters* PassParameters = GraphBuilder.AllocParameters<FOutlineMeshPassParameters>();\n\tPassParameters->View = View.ViewUniformBuffer;\n\n\tPassParameters->RenderTargets[0] = FRenderTargetBinding(SceneTextures.Color.Target, ERenderTargetLoadAction::ELoad);\n\tPassParameters->RenderTargets.DepthStencil = FDepthStencilBinding(SceneTextures.Depth.Target, ERenderTargetLoadAction::ELoad, ERenderTargetLoadAction::ELoad, FExclusiveDepthStencil::DepthWrite_StencilWrite);\n\n\treturn PassParameters;\n}\n\n\nvoid FDeferredShadingSceneRenderer::RenderOutlinePass(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures)\n{\n\tRDG_EVENT_SCOPE(GraphBuilder, "OutlinePass");\n\tRDG_CSV_STAT_EXCLUSIVE_SCOPE(GraphBuilder, RenderOutlinePass);\n\n\tSCOPED_NAMED_EVENT(FDeferredShadingSceneRenderer_RenderOutlinePass, FColor::Emerald);\n\n\tfor(int32 ViewIndex = 0; ViewIndex < Views.Num(); ++ViewIndex)\n\t{\n\t\tFViewInfo& View = Views[ViewIndex];\n\t\tRDG_GPU_MASK_SCOPE(GraphBuilder, View.GPUMask);\n\t\tRDG_EVENT_SCOPE_CONDITIONAL(GraphBuilder, Views.Num() > 1, "View%d", ViewIndex);\n\n\t\tconst bool bShouldRenderView = View.ShouldRenderView();\n\t\tif(bShouldRenderView)\n\t\t{\n\t\t\tFOutlineMeshPassParameters* PassParameters = GetOutlinePassParameters(GraphBuilder, View, SceneTextures);\n\t\t\t\n\t\t\tView.ParallelMeshDrawCommandPasses[EMeshPass::OutlinePass].BuildRenderingCommands(GraphBuilder, Scene->GPUScene, PassParameters->InstanceCullingDrawParams);\n\n\t\t\tGraphBuilder.AddPass(\n\t\t\t\tRDG_EVENT_NAME("OutlinePass"),\n\t\t\t\tPassParameters,\n\t\t\t\tERDGPassFlags::Raster | ERDGPassFlags::SkipRenderPass,\n\t\t\t\t[this, &View, PassParameters](const FRDGPass* InPass, FRHICommandListImmediate& RHICmdList)\n\t\t\t{\n\t\t\t\tFRDGParallelCommandListSet ParallelCommandListSet(InPass, RHICmdList, GET_STATID(STAT_CLP_OutlinePass), *this, View, FParallelCommandListBindings(PassParameters));\n\t\t\t\tParallelCommandListSet.SetHighPriority();\n\t\t\t\tSetStereoViewport(RHICmdList, View, 1.0f);\n\t\t\t\tView.ParallelMeshDrawCommandPasses[EMeshPass::OutlinePass].DispatchDraw(&ParallelCommandListSet, RHICmdList, &PassParameters->InstanceCullingDrawParams);\n\t\t\t});\n\t\t}\n\t}\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br")])]),e("p",[s._v("接着，还需要在可见相关性函数中添加渲染指令的构建条件，这里同样注释掉还未实现的接口部分，以方便测试功能")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//SceneVisibility.cpp\n// if (StaticMeshRelevance.bHasOutline)\n{\n    DrawCommandPacket.AddCommandsForMesh(PrimitiveIndex, PrimitiveSceneInfo, StaticMeshRelevance, StaticMesh, Scene, bCanCache, EMeshPass::OutlinePass);\n}\n\nif (StaticMeshRelevance.bUseAnisotropy)\n{\n    DrawCommandPacket.AddCommandsForMesh(PrimitiveIndex, PrimitiveSceneInfo, StaticMeshRelevance, StaticMesh, Scene, bCanCache, EMeshPass::AnisotropyPass);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("最后，在Render主函数中调用刚刚实现的Render函数，即可看到添加的自定义Pass运行起来了")]),s._v(" "),e("div",{staticClass:"language-C++ line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("//DeferredShadingRenderer.cpp\nRenderOutlinePass(GraphBuilder, SceneTextures);\n\nAddSubsurfacePass(GraphBuilder, SceneTextures, Views);\n\nStrata::AddStrataOpaqueRoughRefractionPasses(GraphBuilder, SceneTextures, Views);\n\n{\n    RenderHairStrandsSceneColorScattering(GraphBuilder, SceneTextures.Color.Target, Scene, Views);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("到这里，描边绘制的功能显然是不完善的，那么下一篇就继续讲讲，如何针对这个功能，做一些编辑器的定制吧。")])])}),[],!1,null,null,null);e.default=t.exports}}]);